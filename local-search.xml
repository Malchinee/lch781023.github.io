<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>第八章 IO库</title>
    <link href="/2022/04/07/%E7%AC%AC%E5%85%AB%E7%AB%A0-IO%E5%BA%93/"/>
    <url>/2022/04/07/%E7%AC%AC%E5%85%AB%E7%AB%A0-IO%E5%BA%93/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>读书笔记</category>
      
      <category>C++ Primer</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>C++ Primer 前七章</title>
    <link href="/2022/04/05/C-Primer-%E5%89%8D%E4%B8%83%E7%AB%A0/"/>
    <url>/2022/04/05/C-Primer-%E5%89%8D%E4%B8%83%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="const限定符"><a href="#const限定符" class="headerlink" title="const限定符"></a>const限定符</h2><h4 id="初始化和对const的引用"><a href="#初始化和对const的引用" class="headerlink" title="初始化和对const的引用"></a>初始化和对const的引用</h4><p>初始化常量引用时，可以用任意表达式作为初始值，只要该表达式能转换成引用的类型即可。<strong>引用类型都要和与之绑定的对象的类型一致，此处属于两种例外之一</strong></p><figure class="highlight angelscript"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-built_in">double</span> dval =<span class="hljs-number">3.14</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-built_in">int</span> &amp;ri=dval;<br></code></pre></td></tr></table></figure><p>此处正确，编译器把上述代码变成如下形式，此时，ri绑定了一个临时量对象。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-keyword">const</span> <span class="hljs-built_in">int</span> temp= dval;<br><span class="hljs-keyword">const</span> <span class="hljs-built_in">int</span> &amp;ri=temp;<br></code></pre></td></tr></table></figure><p>同样的指针也类似,<strong>允许指向常量的指针指向非常量对象</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">double <span class="hljs-attribute">dval</span>=3.14;<br>const double <span class="hljs-number">*c</span><span class="hljs-attribute">ptr</span>=&amp;dval;<br></code></pre></td></tr></table></figure><h4 id="顶层const"><a href="#顶层const" class="headerlink" title="顶层const"></a>顶层const</h4><p>表示指针本身是个常量，<strong>底层const</strong>表示<br><strong>顶层const</strong>可以表示任意对象是常量，<strong>底层const</strong>与指针和引用等复合类型的基本类型部分有关。<br>对于拷贝操作来说，顶层const基本不受影响，而对于底层const，拷入和拷出的对象必须是相同的底层const，或者非常量可以转化成常量，而常量不能转化成非常量。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">const int <span class="hljs-attribute">i</span>=0;<br>int &amp;<span class="hljs-attribute">r</span>=i;<br></code></pre></td></tr></table></figure><p>上述代码是错误的，普通的int&amp;类型不能绑定到int常量上。</p>]]></content>
    
    
    <categories>
      
      <category>读书笔记</category>
      
      <category>C++ Primer</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>虚幻4入门</title>
    <link href="/2022/03/22/%E8%99%9A%E5%B9%BB4%E5%85%A5%E9%97%A8/"/>
    <url>/2022/03/22/%E8%99%9A%E5%B9%BB4%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<h3 id="虚幻4工程文件夹的结构"><a href="#虚幻4工程文件夹的结构" class="headerlink" title="虚幻4工程文件夹的结构"></a>虚幻4工程文件夹的结构</h3><div class="code-wrapper"><pre><code class="hljs">Config ：包含项目设置，键盘输入之类的配置文件Content ：存放引擎或游戏内容，包括地图、贴图、模型、材质、蓝图等Intermediate 包含了在编译引擎或游戏时生成的临时文件Saved 包含了自动保存内容，配置（*.ini）文件以及日志文件.uproject 项目启动程序，开启项目</code></pre></div><img src="/2022/03/22/%E8%99%9A%E5%B9%BB4%E5%85%A5%E9%97%A8/%E9%A1%B9%E7%9B%AE%E7%BB%84%E6%88%90.png" class>]]></content>
    
    
    <categories>
      
      <category>虚幻4</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
